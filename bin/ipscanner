#!/bin/zsh
# Minimal IP and port scanner
ipport() { # Port scanner
    local ip="$1"
    local port_range="$2"
    if [[ ! $ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        echo "Usage: iport <ip> <port-range> -q to make it silent" | color 2
        echo "Example: iport 192.168.1.1 1-100" | color cyan
        return 1
    fi
    if [[ -z $port_range ]]; then
        port_range="1-1000"
    fi
    declare -A port_protocol
    port_protocol[80]="HTTP"
    port_protocol[443]="HTTPS"
    port_protocol[22]="SSH"
    port_protocol[21]="FTP"
    counter=0
    for port in $(seq $(echo "$port_range" | cut -d'-' -f 1) $(echo "$port_range" | cut -d'-' -f 2)); do
        {
            if timeout 1 bash -c "echo >/dev/tcp/$ip/$port" &>/dev/null; then
                protocol="${port_protocol[$port]}"
                [[ -z $protocol ]] && protocol="Unknown"
                [[ ! -z $3 && $3 == "-q" ]] && echo "$port" || echo "$ip Port $port [$protocol] is open http://$ip:$port" | color 1
            fi
            ((counter++))
        } 2>&1 &!
    done
    
    wait
}
get_mac_address() { # Get mac from a ip
    ip neigh show to "$1" | awk '{print $5; exit}' | tr '[:lower:]' '[:upper:]'
}
ipscanner() { # Ip scanner
    if [[ ! $1 =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}-[0-9]{1,3}$ ]]; then
        echo "Usage: ipscanner <subnet.start-end> <port-start.end>" | color 2
        echo "Example: ipscanner 192.168.1.1-255 1-100" | color 5
        return 1
    fi
    local subnet=$(echo $1 | cut -d '-' -f 1 | cut -d '.' -f 1-3)
    local start_ip=$(echo $1 | cut -d '.' -f 4 | cut -d '-' -f 1)
    local end_ip=$(echo $1 | cut -d '-' -f 2)
    local full_ip
    local ports
    local counter
    local port_range="$2"
    local temp_file=$(mktemp)
    if [[ ! -z $port_range ]]; then
        echo "Started scanning from $subnet.$start_ip to $subnet.$end_ip from port $(echo "$2" | cut -d'-' -f 1) to $(echo "$2" | cut -d'-' -f 2)." | color 5
        echo "IP Address    :           Ports           :            Hostname             :        Mac        : Corporation  :          Manufacturer" | color 3
    else
        echo "Started scanning from $subnet.$start_ip to $subnet.$end_ip" | color 4
        echo "IP Address    :            Hostname             :        Mac        : Corporation  :          Manufacturer" | color 3
    fi
    counter=0
    [[ ! -f "/tmp/oui-tmp.txt" ]] && wget -qO "/tmp/oui-tmp.txt" https://www.wireshark.org/download/automated/data/manuf
    for ((ip=start_ip; ip<=end_ip; ip++)); do
        full_ip="$subnet.$ip"
        ((counter++))
        {
            if ping -c 1 -W 1 $full_ip &>/dev/null; then
                hostname=$(getent hosts $full_ip | awk '{print $2}' | head -n 1)
                mac=$(get_mac_address "$full_ip")
                if [[ -n $mac ]]; then
                    oui_prefix="${mac:0:8}"
                    corporation=$(grep -i "^$oui_prefix" "/tmp/oui-tmp.txt" | awk -F '\t' '{print $2}')
                    manufacturer=$(grep -i "^$oui_prefix" "/tmp/oui-tmp.txt" | awk -F '\t' '{print $3}')
                else
                    corporation="N/A"
                    manufacturer="N/A"
                fi
                if [[ ! -z $port_range ]]; then
                    ports=$(ipport $full_ip $port_range -q | tr '\n' ',')
                    printf "%-13s : %-25s : %-31s : %-17s : %-12s : %-30s" "${full_ip:-N/A}" "${ports:-N/A}" "${hostname:-N/A}" "${mac:-N/A}" "${corporation:-N/A}" "${manufacturer:-N/A}" | color 1
                else
                    printf "%-13s : %-31s : %-17s : %-12s : %-30s" "${full_ip:-N/A}" "${hostname:-N/A}" "${mac:-N/A}" "${corporation:-N/A}" "${manufacturer:-N/A}" | color 1
                fi
            fi
        } >> "$temp_file" &!
    done
    wait
    while true; do
        sleep 5
        if (( counter >= end_ip )); then
            break 
        fi
    done
    sort -t . -k 3,3n -k 4,4n "$temp_file" | uniq
    rm $temp_file
    echo "Scan complete." | color 5
}
ipscanner "$@"
