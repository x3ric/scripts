#!/bin/bash
# Digispark udev rules
sudo groupadd dialout
sudo usermod -a -G dialout e 
FILE_PATH="/etc/udev/rules.d/49-micronucleus.rules"
CONTENT="# UDEV Rules for Micronucleus boards including the Digispark.\n# This file must be placed at:\n#\n# /etc/udev/rules.d/49-micronucleus.rules    (preferred location)\n#   or\n# /lib/udev/rules.d/49-micronucleus.rules    (req'd on some broken systems)\n#\n# After this file is copied, physically unplug and reconnect the board.\n#\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"16d0\", ATTRS{idProduct}==\"0753\", MODE:=\"0666\"\nKERNEL==\"ttyACM*\", ATTRS{idVendor}==\"16d0\", ATTRS{idProduct}==\"0753\", MODE:=\"0666\", ENV{ID_MM_DEVICE_IGNORE}=\"1\"\n#\n# If you share your linux system with other users, or just don't like the\n# idea of write permission for everybody, you can replace MODE:=\"0666\" with\n# OWNER:=\"yourusername\" to create the device owned by you, or with\n# GROUP:=\"somegroupname\" and manage access using standard unix groups.\n"
if [ ! -f "$FILE_PATH" ]; then
    echo "Creating UDEV rule for Digispark boards..."
    echo -e "$CONTENT" | sudo tee "$FILE_PATH" > /dev/null
    if [ $? -eq 0 ]; then
        echo "UDEV rule for Digispark created successfully."
        echo "Reloading UDEV rules..."
        sudo udevadm control --reload-rules
        echo "UDEV rules reloaded."
    else
        echo "Failed to create UDEV rule for Digispark."
        return 1
    fi
else
    echo "UDEV rule for Digispark already exists."
fi
# Arduino Digistump Repo Fork "With working Flasher for old Digisparks" "https://raw.githubusercontent.com/ArminJo/DigistumpArduino/master/package_digistump_index.json"
# to download the digistump avr boards programmer and start programmin with Arduino
