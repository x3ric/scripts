#!/bin/bash
# Linux virt-manager
need "dnsmasq"
need "qemu-full"
need "libvirt"
need "virt-manager"
need "vde2"
need "ebtables"
need "iptables-nft"
need "nftables"
need "bridge-utils"
need "ovmf"

perms() { # libvirt conf
    if ! grep -q '^unix_sock_group' /etc/libvirt/libvirtd.conf; then
        # libvirt read write perms and group
        unix_sock_rw_perms="0770"
        unix_sock_group="libvirt"
        sudo sed -i '/^#unix_sock_group/s/^#//' /etc/libvirt/libvirtd.conf
        sudo sed -i '/^unix_sock_group/s/=.*/= "'"$unix_sock_group"'"/' /etc/libvirt/libvirtd.conf
        sudo sed -i '/^#unix_sock_ro_perms/s/^#//' /etc/libvirt/libvirtd.conf
        sudo sed -i '/^#unix_sock_rw_perms/s/^#//' /etc/libvirt/libvirtd.conf
        sudo sed -i '/^unix_sock_rw_perms/s/=.*/= "'"$unix_sock_rw_perms"'"/' /etc/libvirt/libvirtd.conf
        # vm needed groups
        sudo usermod -aG libvirt,libvirt-qemu,kvm,input,disk $USER
    fi
}

perms

start() { # virt manager conf and run
    if ! systemctl is-active --quiet libvirtd.service; then
        sudo systemctl enable libvirtd.service
        sudo systemctl start libvirtd.service
        # virsh network autostart when needed
        sudo virsh net-destroy default &> /dev/null 2> /dev/null
        sudo virsh net-start default &> /dev/null 2> /dev/null
        sudo virsh net-autostart default &> /dev/null 2> /dev/null
    fi

    virt-manager 2> /dev/null
}

start
